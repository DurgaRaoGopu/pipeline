version: "3.8"

services:
  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    networks:
      - app-network
    container_name: api_service

  order-generator:
    build:
      context: ./order-generator
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - ./order-generator/.env
    environment:
      - REACT_APP_API_HOST
    container_name: order_generator

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9092:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    links:
      - cadvisor:cadvisor
    networks:
      - app-network
    depends_on:
      - cadvisor
    restart: always
    container_name: prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: always
    deploy:
      mode: global
    container_name: cadvisor

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - app-network
    restart: always
    deploy:
      mode: global
    container_name: node_exporter

networks:
  app-network:
    driver: bridge
